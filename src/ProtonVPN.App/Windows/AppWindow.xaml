<!--
Copyright (c) 2020 Proton Technologies AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<resource:WindowBase x:Class="ProtonVPN.Windows.AppWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:resource="clr-namespace:ProtonVPN.Resource;assembly=ProtonVPN.Resource"
                     xmlns:connectingScreen="clr-namespace:ProtonVPN.ConnectingScreen"
                     xmlns:viewModels="clr-namespace:ProtonVPN.Login.ViewModels"
                     xmlns:login="clr-namespace:ProtonVPN.Login.Views"
                     xmlns:mapViewModels="clr-namespace:ProtonVPN.Map.ViewModels"
                     xmlns:views="clr-namespace:ProtonVPN.Map.Views"
                     xmlns:onboarding="clr-namespace:ProtonVPN.Onboarding"
                     xmlns:translations="clr-namespace:ProtonVPN.Translations;assembly=ProtonVPN.Translations"
                     xmlns:viewModel="clr-namespace:ProtonVPN.ViewModels"
                     xmlns:view="clr-namespace:ProtonVPN.Views"
                     xmlns:flashNotifications="clr-namespace:ProtonVPN.FlashNotifications"
                     mc:Ignorable="d"
                     x:Name="Window"
                     FontFamily="Segoe UI Symbol"
                     Title="{translations:Loc App_ttl}"
                     MinWidth="336"
                     MinHeight="600"
                     FlowDirection="{Binding FlowDirection}"
                     d:DataContext="{d:DesignData viewModel:MainViewModel}">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="{Binding ActualHeight, ElementName=Titlebar}" GlassFrameThickness="0" CornerRadius="0"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <DataTemplate DataType="{x:Type viewModel:AppLoadingViewModel}">
            <view:AppLoading/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type mapViewModels:MapViewModel}">
            <views:Map/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type connectingScreen:ConnectingViewModel}">
            <connectingScreen:Connecting/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type flashNotifications:FlashNotificationViewModel}">
            <flashNotifications:FlashNotifications/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModels:LoginErrorViewModel}">
            <login:LoginErrorView/>
        </DataTemplate>

        <Style x:Key="SubmenuItem" TargetType="MenuItem" BasedOn="{StaticResource CustomMenuItem}">
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            <Setter Property="Background" Value="#34343c"/>
            <Setter Property="BorderBrush" Value="#43434d"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="0,4,50,5"/>
            <Setter Property="Margin" Value="10,0,10,0"/>
            <Setter Property="Foreground" Value="#cacad5"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SubmenuItemLast" TargetType="MenuItem" BasedOn="{StaticResource SubmenuItem}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="10,0,10,5"/>
        </Style>
        <Style x:Key="TopMenuItem" TargetType="MenuItem" BasedOn="{StaticResource CustomMenuItem}">
            <Setter Property="Height" Value="36"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource GrayColor}"/>
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        </Style>
        <Style x:Key="BlockableTopMenuItem" TargetType="MenuItem" BasedOn="{StaticResource SubmenuItem}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding BlockMenu}" Value="True">
                    <Setter Property="Opacity" Value="0.4"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="BlurBorder" TargetType="Border">
            <Setter Property="Background" Value="#2a2a30"/>
            <Setter Property="Margin" Value="-10"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Connecting}" Value="True">
                    <Setter Property="Background" Value="#2a2a30"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <StackPanel Style="{StaticResource Titlebar}" x:Name="Titlebar" VerticalAlignment="Top" Panel.ZIndex="1">
            <DockPanel Style="{StaticResource TitleDock}">
                <Path Margin="7,0" Fill="{StaticResource PrimaryColor}" Style="{StaticResource ProtonIcon}"/>
                <Menu Foreground="{StaticResource GrayColor}"
                      Background="Transparent"
                      FontSize="14"
                      AutomationProperties.AutomationId="{StaticResource MenuHamburgerButton}">
                    <MenuItem Style="{StaticResource TopMenuItem}">
                        <MenuItem Command="{Binding AboutCommand}"
                                  Style="{StaticResource BlockableTopMenuItem}"
                                  Margin="10,5,10,0"
                                  Header="{translations:Loc App_mnu_About}"/>
                        <MenuItem Command="{Binding AccountCommand}"
                                  Header="{translations:Loc App_mnu_Account}"
                                  Style="{StaticResource BlockableTopMenuItem}"
                                  AutomationProperties.AutomationId="{StaticResource MenuAccountButton}"/>
                        <MenuItem Command="{Binding ProfilesCommand}"
                                  Header="{translations:Loc App_mnu_Profiles}"
                                  Style="{StaticResource BlockableTopMenuItem}"
                                  AutomationProperties.AutomationId="{StaticResource MenuProfilesButton}"/>
                        <MenuItem Command="{Binding SettingsCommand}"
                                  Header="{translations:Loc App_mnu_Settings}"
                                  Style="{StaticResource BlockableTopMenuItem}"
                                  AutomationProperties.AutomationId="{StaticResource MenuSettingsButton}"/>
                        <MenuItem Command="{Binding HelpCommand}"
                                  Style="{StaticResource SubmenuItem}"
                                  Header="{translations:Loc App_mnu_Help}"
                                  AutomationProperties.AutomationId="{StaticResource MenuHelpButton}"/>
                        <MenuItem Command="{Binding ReportBugCommand}"
                                  Style="{StaticResource BlockableTopMenuItem}"
                                  Header="{translations:Loc App_mnu_ReportBug}"
                                  AutomationProperties.AutomationId="{StaticResource MenuReportBugButton}"/>
                        <MenuItem Command="{Binding LogoutCommand}"
                                  Style="{StaticResource SubmenuItem}"
                                  Header="{translations:Loc App_mnu_Logout}"
                                  AutomationProperties.AutomationId="{StaticResource MenuLogoutButton}"/>
                        <MenuItem Command="{Binding ExitCommand}"
                                  Style="{StaticResource SubmenuItemLast}"
                                  Header="{translations:Loc App_mnu_Exit}"
                                  AutomationProperties.AutomationId="{StaticResource MenuExitButton}"/>
                    </MenuItem>
                </Menu>
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button Style="{StaticResource WindowsMinimizeButton}" Name="MinimizeButton"/>
                    <Button Style="{StaticResource WindowsMaximizeButton}" Name="MaximizeButton"/>
                    <Button Style="{StaticResource WindowsCloseButton}" Name="CloseButton"/>
                </StackPanel>
            </DockPanel>
        </StackPanel>

        <Grid VerticalAlignment="Top" Margin="0,36,0,0">
            <Border x:Name="BlurBorder" Style="{StaticResource BlurBorder}">
                <Grid Margin="10">
                    <ContentControl Content="{Binding Map}"/>
                    <flashNotifications:FlashNotifications VerticalAlignment="Bottom"
                                                           MinHeight="40"
                                                           HorizontalAlignment="Stretch"
                                                           DataContext="{Binding FlashNotification}"/>
                </Grid>
            </Border>

            <Border Visibility="{Binding Connecting, Converter={StaticResource BoolToVis}}" Background="Transparent">
                <connectingScreen:Connecting DataContext="{Binding Connection}"/>
            </Border>

            <StackPanel HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Visibility="{Binding ShowOnboarding, Converter={StaticResource BoolToVis}}">
                <onboarding:OnboardingView DataContext="{Binding Onboarding}"/>
            </StackPanel>
        </Grid>
        <Border BorderBrush="{StaticResource SecondaryColor}" BorderThickness="1" Panel.ZIndex="1"/>
    </Grid>
</resource:WindowBase>
